name: Ferryman

on:
  push:
    branches: 
    - '*'
    # 忽略指定文件
    paths-ignore:
    - 'README.md'
  schedule:
    # Minimum interval 5 minutes
    - cron:  '0 */6 * * *'
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: init
      run: |
        echo "Current path: $(pwd)"
        echo "List files: $(ls -l)"
        
        # time zone
        /bin/cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
        echo "current time: $(date +%Y-%m-%d\ %H:%M:%S)"

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Install dependencies
      run: |
        python -V
        python -m pip install --upgrade pip
        
        #pip install flake8 pytest
        
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: Run APP
      # 指定超时分钟数（Default: 360）
      # 每个Job最大时长是默认的360分钟，超过后会被触发取消操作，而不是超时操作，所以最好设置一个超时时间触发超时
      timeout-minutes: 300
      # 即使步骤出错也继续运行
      continue-on-error: true
      env:
        TARGET_USER: ${{ secrets.TARGET_USER }}
        TARGET_PASSWORD: ${{ secrets.TARGET_PASSWORD }}
      run: |
        python ferryman.py

    - name: Git Commit & Push
      env:
        GIT_MAIL: ${{ secrets.GIT_MAIL }}
        GIT_USER: ${{ secrets.GIT_USER }}
      run: |
        git config --global user.email $GIT_MAIL
        git config --global user.name $GIT_USER
        git add .
        git commit -m "Updated at $(date +%Y-%m-%d\ %H:%M:%S)" -a || echo "nothing to commit"
        git push

    #- name: Git Push Changes
    #  uses: ad-m/github-push-action@master
    #  with:
        # 使用Github Actions内置秘钥GITHUB_TOKEN，用于授权访问自己的GitHub存储库
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # 指定推送到哪个分支（默认为master）
    #   branch: test
